openapi: 3.0.4
info:
  title: Toy Store API
  version: 1.0.0
  description: A basic API for an online toy store.
paths:
  /products:
    summary: Get all of the products data.
    description: >-
      This path is used to retrieve all of the products data from the products
      database file.
    get:
      summary: Gets the products data
      description: Retrieve the products information from the products database.
      operationId: get
      responses:
        '200':
          content:
            application/json:
              examples:
                products:
                  value: >-
                    {"orders":[{"name":"Carey
                    Maynard","id":"001","state":"pending"},{"name":"Angelo
                    Ayala","id":"002","state":"canceled"},{"name":"Regina
                    Yates","id":"003","state":"pending"},{"name":"Elliott
                    Mcclure","id":"004","state":"pending"}]}
          description: Success
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: Products not found
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server error
          description: Internal Server Error
      tags:
        - Product
  /products/{id}:
    summary: Get a product by ID.
    description: Gets a product by a matching ID from the products database.
    get:
      summary: Get a product by ID.
      description: >-
        This operation retrieves a product from the products database by a
        matching ID.
      operationId: getProduct
      parameters:
        - name: id
          in: path
          description: The id of the product.
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                order:
                  value: {}
          description: Success
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: Product not found
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server error
          description: Internal Server Error
      tags:
        - Product
  /orders:
    summary: Place a new order
    description: This path is used to place a new order to the orders database.
    post:
      summary: Places a new order
      description: This operation adds a new order to the orders database.
      operationId: placeOrder
      requestBody:
        description: A new order object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              examples:
                Message:
                  value:
                    orderId: order_id
          description: Success
        '400':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Invalid Argument
          description: Invalid Argument Provided
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - Order
  /orders/{id}:
    get:
      summary: Gets an order by ID.
      description: >-
        This operation retrieves an order from the orders database by a matching
        id.
      operationId: getOrder
      parameters:
        - name: id
          in: path
          description: The id of the order.
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                order:
                  value: {}
          description: Success
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: Order not found
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - Order
    delete:
      summary: Cancels an order
      description: This operation changes the order status in the orders database to cancelled if possible.
      operationId: cancelOrder
      parameters:
        - name: id
          in: path
          description: The id of the order.
          required: true
          schema:
            type: string
      responses:
        '204':
          content:
            text/plain; charset=utf-8:
              examples:
                Message:
                  value: Success
          description: Success
        '400':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Invalid Argument
          description: Invalid Argument Provided
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: Order not found
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - Order
  /users:
    post:
      summary: Creates a new user without a specified ID
      description: >-
        Creates a user without a specifired ID and adds it to the users
        database.
      operationId: createUser
      responses:
        '201':
          content:
            application/json:
              examples:
                Message:
                  value:
                    userId: user_id
          description: Success
        '400':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Invalid Argument
          description: Invalid Argument Provided
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - User
  
  # or user/me assumed by default
  /users/{id}:
    get:
      summary: Gets a user by ID.
      description: Retrieves a user from the users database by a matching ID.
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: The id of the user.
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                order:
                  value: {}
          description: Success
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: User not found
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - User
    put:
      summary: Update a user by ID
      description: >-
        Updates the details of a specific user in the users database matching by
        user ID.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: The id of the user.
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                order:
                  value: {}
          description: Success
        '400':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Invalid Argument
          description: Invalid Argument Provided
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: User not foun
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - User
  /login:
    post:
      summary: Logs a user in
      description: Logs a user in
      operationId: loginUser
      requestBody:
        description: Login credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          content:
            application/json:
              examples:
                order:
                  value: {userId: user_id}
          description: Success
        '400':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Invalid Argument
          description: Invalid Argument Provided
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - User
  /logout:
    post:
      summary: Logs a user out
      description: Logs a user out
      operationId: logoutUser
      responses:
        '200':
          content:
            application/json:
              examples:
                order:
                  value: {status: success}
          description: Success
        '401':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Unauthorized
          description: Invalid token
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: User not found
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - User
      
  /carts:
    post:
      summary: Create a new cart
      description: >-
        Creates a new, empty shopping cart for a user. This might involve
        generating a unique cart ID and associating it with the user (possibly
        through a session or user ID).
      operationId: createCart
      responses:
        '201':
          content:
            application/json:
              examples:
                Message:
                  value:
                    cartId: cart_id
          description: Success
        '400':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Invalid Argument
          description: Invalid Argument Provided
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - Cart
  /carts/{cartId}:
    get:
      summary: Get a user cart
      description: >-
        Retrieves the contents of a specific cart, including the items,
        quantities, and potentially other related information like shipping
        address or pricing.
      operationId: getCart
      parameters:
        - name: cartId
          in: path
          description: The id of the cart.
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                order:
                  value: {}
          description: Success
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: Cart not found
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - Cart
    put:
      summary: Update Cart
      description: >-
        Modifies an existing item within the cart. This could involve adding a
        new item, changing the quantity of an existing item, or removing an
        item.
      operationId: updateCart
      parameters:
        - name: cartId
          in: path
          description: The id of the cart.
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                order:
                  value: {}
          description: Success
        '400':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Invalid Argument
          description: Invalid Argument Provided
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: User not foun
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - Cart
    delete:
      summary: Delete cart
      description: Deletes the entire cart from the carts database
      operationId: deleteCart
      parameters:
        - name: cartId
          in: path
          description: The id of the cart.
          required: true
          schema:
            type: string
      responses:
        '204':
          content:
            text/plain; charset=utf-8:
              examples:
                Message:
                  value: Success
          description: Success
        '400':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Invalid Argument
          description: Invalid Argument Provided
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Not found
          description: Cart not found
        '500':
          content:
            text/plain; charset=utf-8:
              examples:
                Error:
                  value: Server Error
          description: Internal Server Error
      tags:
        - Cart
components:
  schemas:
    Order:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        state:
          type: string
      xml:
        name: Order
        
    Credentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
